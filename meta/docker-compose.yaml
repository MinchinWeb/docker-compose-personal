version: '2.4'

# environmental variables *for Docker Compose* will be loaded from a `.env` file
# in the same directory as this file

services:
  portainer:
    # Portainer - WebUI for Containers
    image: portainer/portainer-ce
    # container_name: portainer
    hostname: portainer
    environment:
      - TZ=${TZ}
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9900:9000
      # - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_USERDIR}/volumes/portainer/data:/data
      - ${DOCKER_USERDIR}/volumes/shared:/shared
    # networks:
    #   external:
    labels:
      - traefik.enable=true
      # doesn't seem to work on path; never connects to Docker deamon
      - traefik.http.routers.portainer.rule=Host("portainer.${LOCAL_DOMAIN_NAME}")
      - traefik.http.services.portainer-service.loadbalancer.server.port=9000

      # docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce

  watchtower:
    # Watchtower - Automatic Update of Containers/Apps
    #
    # no UI, but possible to get notifications on updates via email or Slack
    # configure through ENV section
    image: v2tec/watchtower
    # container_name: watchtower
    hostname: watchtower
    command: --schedule "0 0 4 * * *" --cleanup
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=false
    # networks:
    #   external:

  dozzle:
    # Dozzle - Real-time Docker Log Viewer
    image: amir20/dozzle:latest
    # container_name: dozzle
    restart: unless-stopped
    ports:
      - 9946:8080
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
      # DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.dozzle.rule=Host("dozzle.${LOCAL_DOMAIN_NAME}")
      - traefik.http.routers.dozzle-logs.rule=Host("logs.${LOCAL_DOMAIN_NAME}")

  pihole:
    image: pihole/pihole
    restart: unless-stopped
    # ports:
    #   - "53:53/tcp"
    #   - "53:53/udp"
    #   - "67:67/udp"
    #   - "80:80/tcp"
    #   - "443:443/tcp"
    environment:
      - TZ=${TZ}
      # - WEBPASSWORD=${PIHOLE_PASSWORD}
    volumes:
      - ${DOCKER_USERDIR}/volumes/pihole/etc-pihole/:/etc/pihole/
      - ${DOCKER_USERDIR}/volumes/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
    networks:
      # list both networks. The `vlan` allows it to be usable as a DNS server, while the
      # `default` network allows it to work via Traefik, and therefore by the domain name.
      vlan:
          ipv4_address: "192.168.1.194"
      default:
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.rule=Host("pihole.${LOCAL_DOMAIN_NAME}")
      - traefik.http.services.pihole-service.loadbalancer.server.port=80

  # filezilla:
  #   image: jlesage/filezilla
  #   restart: unless-stopped
  #   ports:
  #     - 9964:5800
  #   # environment:
  #   volumes:
  #     - ${DOCKER_USERDIR}/volumes/filezilla/:/config:rw
  #     - ${DOCKER_EXTRA_DIR}:/storage/d

  samba:
    image: joebiellik/samba-server
    environment:
      - USERNAME=joe
      - PASSWORD=samba
      # Uncomment to override defaults
      - UID=${PUID}
      - GID=${PGID}
    volumes:
      # You must provide a Samba config file
      - ${DOCKER_USERDIR}/volumes/samba/smb.conf:/etc/samba/smb.conf
      # Shares
      - ${DOCKER_USERDIR}/volumes/starbound-config:/mnt/starbound:ro
      - ${DOCKER_USERDIR}/volumes/starbound-fu-config:/mnt/starbound-fu:ro
      - ${DOCKER_EXTRA_DIR}/qbittorrent/downloads:/mnt/torrents
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    restart: unless-stopped
    labels:
      - traefik.enable=false


  # scrutiny:
  #   # hard drive monitoring
  #   image: lscr.io/linuxserver/scrutiny
  #   container_name: scrutiny
  #   cap_add:
  #     - SYS_RAWIO
  #     # - SYS_ADMIN # optional, required for NVMe drives
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - SCRUTINY_API_ENDPOINT=http://localhost:8080
  #     - SCRUTINY_WEB=true
  #     - SCRUTINY_COLLECTOR=true
  #   volumes:
  #     - ${DOCKER_USERDIR}/volumes/scrutiny:/config
  #     - /run/udev:/run/udev:ro
  #   ports:
  #     - 9968:8080
  #   devices:
  #     - /dev/sda:/dev/sda
  #     - /dev/sdb:/dev/sdb
  #     - /dev/sdc:/dev/sdc
  #   restart: unless-stopped
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.scrutiny.rule=Host("scrutiny.${LOCAL_DOMAIN_NAME}") 

  #   # You may need to manually enter the container to run 
  #   # `scrutiny-collector-metrics run` for your first job or wait
  #   # until around midnight for it to kick off.

  qdirstat:
    image: jlesage/qdirstat
    container_name: qdirstat
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_USERDIR}/volumes/qdirstat:/config
      - /:/storage:ro
    ports:
      - 9970:5800
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.qdirstat.rule=Host("dirstat.${LOCAL_DOMAIN_NAME}") 


  rsnapshot:
    image: lscr.io/linuxserver/rsnapshot
    container_name: rsnapshot
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:universal-docker
    volumes:
      # backup from /data to /.snapshots
      - ${DOCKER_USERDIR}/volumes/rsnapshot:/config
      - ${NAS_DIR}/home/trocadero:/.snapshots
      - ${DOCKER_USERDIR}/volumes:/data/volumes:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    labels:
      - traefik.enable=false




networks:
  default:
    name: meta_external
  vlan:
    driver: macvlan
    driver_opts:
      parent: ${NETWORK_INTERFACE}
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1
          # 192.168.1.192 to 192.168.1.223
          ip_range: 192.168.1.192/27
